package prj.view.panel;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import prj.JDBC.JDBCconnection;
import prj.controller.ImportVoucherController;
import prj.controller.ReceiptController;
import prj.model.ImportVoucher;
import prj.model.Receipt;

/**
 *
 * @author THAONGAN
 */
public class PanelReport extends javax.swing.JPanel {

    /**
     * Creates new form ReportPanel
     */
    private static PanelReport instance = new PanelReport();

    public static PanelReport getInstance() {
        return instance;
    }

    private PanelReport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        btnStatistic = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListReceipt = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListImport = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbAmountReceipt = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbAmountImport = new javax.swing.JLabel();
        lbSumReceipt = new javax.swing.JLabel();
        lbSumImport = new javax.swing.JLabel();
        lbBalance = new javax.swing.JLabel();

        btnStatistic.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnStatistic.setText("Thống kê");
        btnStatistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatisticActionPerformed(evt);
            }
        });

        tblListReceipt.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tblListReceipt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hoá đơn", "Mã NV", "Tên NV", "Mã KH", "Tên KH", "Ngày mua", "Tổng tiền"
            }
        ));
        jScrollPane1.setViewportView(tblListReceipt);

        tblListImport.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tblListImport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Phiếu nhập", "Mã NV", "Tên NV", "Mã NCC", "Tên NCC", "Ngày lập phiếu", "Tổng tiền"
            }
        ));
        jScrollPane2.setViewportView(tblListImport);

        jLabel1.setBackground(new java.awt.Color(157, 173, 184));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông tin chi tiết ");
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tổng số lượng hoá đơn: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Tổng số lượng phiếu nhập:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Tổng doanh thu:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Tổng chi phí nhập:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Chênh lệch thu chi:");

        lbAmountReceipt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbAmountReceipt.setText("0");

        lbAmountImport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbAmountImport.setText("0");

        lbSumReceipt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSumReceipt.setText("0");

        lbSumImport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSumImport.setText("0");

        lbBalance.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbBalance.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSumReceipt)
                            .addComponent(lbAmountReceipt)
                            .addComponent(lbBalance))
                        .addGap(290, 290, 290)
                        .addComponent(jLabel7)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbAmountImport, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSumImport, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(102, 102, 102))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnStatistic)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnStatistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jMonthChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbAmountReceipt)
                    .addComponent(jLabel7)
                    .addComponent(lbAmountImport)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbSumImport))
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(lbSumReceipt))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lbBalance))
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnStatisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatisticActionPerformed
        // TODO add your handling code here:
        System.err.println(jYearChooser1.getYear());
        System.err.println(jMonthChooser1.getMonth());
        tblListReceipt.setModel(new DefaultTableModel());
        tblListImport.setModel(new DefaultTableModel());
        Connection conn = JDBCconnection.getConnection();
//        ReceiptController re = new ReceiptController();
//        ImportVoucherController im = new ImportVoucherController();
        int mountReceipt = 0;
        int mountImport = 0;
        int sumReceipt = 0;
        int sumImport = 0;
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM HOADON WHERE YEAR(NGAYMUATHUOC) = " + (jYearChooser1.getYear()) + "AND MONTH(NGAYMUATHUOC)=" + (jMonthChooser1.getMonth() + 1) + "");
            while (rs.next()) {
                System.out.println("1");
                String mahd = rs.getString("MAHD");
                String manv = rs.getString("MANV");
                String tennv = rs.getString("TENNV");
                String makh = rs.getString("MAKH");
                String tenkh = rs.getString("TENKH");

                LocalDate ngaymua = rs.getDate("NGAYMUATHUOC").toLocalDate();
                float tongtien = rs.getFloat("TONGTIEN");
                Receipt r = new Receipt(mahd, manv, tennv, makh, tenkh, ngaymua, tongtien);
                ReceiptController.getInstance().getList().add(r);
                tblListReceipt.setModel(
                        ReceiptController.getInstance().toTable());
            }
            rs = st.executeQuery("SELECT * FROM PHIEUNHAPHANG WHERE YEAR(NGAYMUA) = " + (jYearChooser1.getYear()) + "AND MONTH(NGAYMUA)=" + (jMonthChooser1.getMonth() + 1) + "");
            while (rs.next()) {
                String maphieunhap = rs.getString("MAPN");
                String manv = rs.getString("MANV");
                String tennv = rs.getString("TENNV");
                String mancc = rs.getString("MANCC");
                String tenncc = rs.getString("TENNCC");
                LocalDate ngaymua = rs.getDate("NGAYMUA").toLocalDate();
                float gia = rs.getFloat("TRIGIA");
                ImportVoucher i = new ImportVoucher(maphieunhap, manv, tennv, mancc, tenncc, ngaymua, gia);
                ImportVoucherController.getInstance().getList().add(i);
                tblListImport.setModel(ImportVoucherController.getInstance().toTable());
            }
            rs = st.executeQuery("SELECT COUNT(*) AS SL FROM HOADON WHERE YEAR(NGAYMUATHUOC) = " + (jYearChooser1.getYear()) + "AND MONTH(NGAYMUATHUOC)=" + (jMonthChooser1.getMonth() + 1) + "");
            while (rs.next()) {
                mountReceipt = rs.getInt("SL");
            }
            lbAmountReceipt.setText(String.valueOf(mountReceipt));
            rs = st.executeQuery("SELECT COUNT(*) AS SL FROM PHIEUNHAPHANG WHERE YEAR(NGAYMUA) = " + (jYearChooser1.getYear()) + "AND MONTH(NGAYMUA)=" + (jMonthChooser1.getMonth() + 1) + "");
            while (rs.next()) {
                mountImport = rs.getInt("SL");
            }
            lbAmountImport.setText(String.valueOf(mountImport));
            rs = st.executeQuery("SELECT SUM(TONGTIEN) AS TONG FROM HOADON WHERE YEAR(NGAYMUATHUOC) = " + (jYearChooser1.getYear()) + "AND MONTH(NGAYMUATHUOC)=" + (jMonthChooser1.getMonth() + 1) + "");
            while (rs.next()) {
                sumReceipt = rs.getInt("TONG");
            }
            lbSumReceipt.setText(String.valueOf(sumReceipt));
            rs = st.executeQuery("SELECT SUM(TRIGIA) AS TONG FROM PHIEUNHAPHANG WHERE YEAR(NGAYMUA) = " + (jYearChooser1.getYear()) + "AND MONTH(NGAYMUA)=" + (jMonthChooser1.getMonth() + 1) + "");
            while (rs.next()) {
                sumImport = rs.getInt("TONG");
            }
            lbSumImport.setText(String.valueOf(sumImport));
            lbBalance.setText(String.valueOf(sumReceipt - sumImport));
        } catch (SQLException ex) {
            Logger.getLogger(ReceiptController.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnStatisticActionPerformed
    public void JDBCReportReceipt() {
        Connection conn = JDBCconnection.getConnection();
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM HOADON WHERE YEAR(NGAYMUATHUOC) = " + jYearChooser1.getYear() + "");
            while (rs.next()) {
                String mahd = rs.getString("MAHD");
                String manv = rs.getString("MANV");
                String tennv = rs.getString("TENNV");
                String makh = rs.getString("MAKH");
                String tenkh = rs.getString("TENKH");

                LocalDate ngaymua = rs.getDate("NGAYMUATHUOC").toLocalDate();
                float tongtien = rs.getFloat("TONGTIEN");
                Receipt r = new Receipt(mahd, manv, tennv, makh, tenkh, ngaymua, tongtien);
                ReceiptController.getInstance().getList().add(r);
                tblListReceipt.setModel(
                        ReceiptController.getInstance().toTable());

            }
        } catch (SQLException ex) {
            Logger.getLogger(ReceiptController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStatistic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JLabel lbAmountImport;
    private javax.swing.JLabel lbAmountReceipt;
    private javax.swing.JLabel lbBalance;
    private javax.swing.JLabel lbSumImport;
    private javax.swing.JLabel lbSumReceipt;
    private javax.swing.JTable tblListImport;
    private javax.swing.JTable tblListReceipt;
    // End of variables declaration//GEN-END:variables
}
